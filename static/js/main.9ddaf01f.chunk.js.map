{"version":3,"sources":["components/App/App.styles.tsx","context/google-maps.context.tsx","context/api.context.tsx","context/api-locations-filter.context.tsx","context/active-location.context.tsx","context/index.tsx","components/SearchForm/SearchForm.styles.tsx","components/SearchForm/SearchForm.component.tsx","components/LocationsListItem/LocationsListItem.styles.tsx","components/LocationsListItem/LocationsListItem.component.tsx","components/LocationsList/LocationsList.styles.tsx","components/LocationsList/LocationsList.component.tsx","components/Map/Map.styles.tsx","components/Map/Map.component.tsx","components/App/App.component.tsx","reportWebVitals.ts","index.tsx"],"names":["StoreFinderContainer","styled","div","GoogleMapsContext","createContext","GoogleMapsProvider","children","useState","loaded","setLoaded","useEffect","Loader","apiKey","process","version","mapIds","load","then","Provider","value","APIContext","undefined","APIProvider","state","setState","a","fetch","response","json","data","loadData","error","console","LocationsFilteredContext","LocationsFilteredProvider","locations","useContext","filteredLocations","setFilteredLocations","ActiveLocationContext","ActiveLocationProvider","activeLocation","setActiveLocation","CombinedProviders","FormEle","form","BtnEle","button","LabelEle","label","LabelTextEle","span","inputSharedStyles","InputTextEle","input","SelectEle","select","SearchForm","inputValue","setInputValue","selectedTag","setSelectedTag","apiContext","locationsFilteredContext","activeLocationContext","tags","onSubmit","event","preventDefault","filter","item","includes","name","indexOf","address","description","className","type","placeholder","onChange","target","disabled","length","map","tag","index","id","onClick","e","LocationEle","article","LocationBtnWrapEle","LocationBtnEle","props","active","LocationTitleEle","h1","LocationDetailsEle","LocationAddressEle","LocationDetailsPartEle","LocationDetailsTitleEle","h2","TagsEle","TagEle","LocationsListItem","location","setActive","isActive","mappedTags","find","stopPropagation","LocationsListWrapEle","ul","LocationsListEle","LocationsListItemEle","li","LocationsList","MapContainer","Map","googleMapsContext","setMap","markers","setMarkers","mapRef","useRef","current","google","maps","mapId","center","lat","lng","zoom","zoomControl","newMarkers","Marker","position","bounds","LatLngBounds","forEach","marker","getPosition","extend","fitBounds","setZoom","Math","min","getZoom","addListener","log","clearInstanceListeners","findIndex","panTo","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ddaf01f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StoreFinderContainer = styled.div`\r\n    gap: 1em 0;\r\n    width: 100%;\r\n    display: block;\r\n    @media screen and (min-width: 900px) {\r\n        display:grid;\r\n        grid-template-rows: minmax(4em, max-content) 1fr;\r\n        grid-template-columns: 3fr 5fr;\r\n        height: 100vh;\r\n    }\r\n`;","import { createContext, useEffect, useState } from \"react\";\r\n\r\nimport { Loader } from \"@googlemaps/js-api-loader\";\r\n\r\nimport { FunctionComponent } from \"react-dom/node_modules/@types/react\";\r\n\r\ninterface MapsContext {\r\n    loaded: boolean;\r\n}\r\n\r\nexport const GoogleMapsContext = createContext<MapsContext | null>(null);\r\n\r\nexport const GoogleMapsProvider: FunctionComponent<{}> = ({ children }) => {\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // If already loaded do nothing\r\n        if (loaded) {\r\n            return;\r\n        }\r\n        const additionalOptions = {\r\n            mapIds: [(process.env.REACT_APP_MAP_ID || '')]\r\n        };\r\n        const loader = new Loader({\r\n            apiKey: process.env.REACT_APP_GOOGLE_MAPS_API || '',\r\n            version: \"beta\",\r\n            ...additionalOptions,\r\n        });\r\n        loader.load().then(() => {\r\n            setLoaded(true);\r\n        });\r\n    }, [loaded, setLoaded]);\r\n\r\n    return <GoogleMapsContext.Provider value={{ loaded }}>\r\n        {children}\r\n    </GoogleMapsContext.Provider>;\r\n}","import { createContext, FunctionComponent, useEffect, useState } from \"react\";\r\n\r\nexport interface APILocation {\r\n    description: string;\r\n    name: string;\r\n    id: string;\r\n    lat: number,\r\n    lng: number,\r\n    address: string,\r\n    tags?: string[]\r\n}\r\n\r\nexport interface APITag {\r\n    id: string,\r\n    name: string\r\n}\r\n\r\nexport interface APIContextType {\r\n    locations: APILocation[],\r\n    tags: APITag[]\r\n}\r\n\r\nexport const APIContext = createContext<APIContextType | undefined>(undefined);\r\n\r\nexport const APIProvider: FunctionComponent<{}> = ({ children }) => {\r\n\r\n    const [state, setState] = useState<APIContextType>();\r\n\r\n    useEffect(() => {\r\n        async function loadData() {\r\n            const response = await fetch('/api_mock/locations.json');\r\n            const data = await response.json();\r\n            setState(data);\r\n        }\r\n        try {\r\n            loadData();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }, [setState]);\r\n\r\n    return <APIContext.Provider value={state}>\r\n        {children}\r\n    </APIContext.Provider>\r\n}","import { createContext, FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport { APIContext, APILocation } from './api.context';\r\n\r\nexport interface APILocationsFilter {\r\n    filteredLocations: APILocation[];\r\n    setFilteredLocations: (filteredLocations: APILocation[]) => void;\r\n}\r\n\r\nexport const LocationsFilteredContext = createContext<APILocationsFilter | undefined>(undefined);\r\n\r\nexport const LocationsFilteredProvider: FunctionComponent<{}> = ({ children }) => {\r\n\r\n    const { locations } = useContext(APIContext) || { locations: [] };\r\n    const [filteredLocations, setFilteredLocations] = useState<APILocation[]>(locations);\r\n\r\n    useEffect(() => {\r\n        setFilteredLocations(locations);\r\n    }, [locations, setFilteredLocations])\r\n\r\n    return <LocationsFilteredContext.Provider value={{ filteredLocations, setFilteredLocations }}>\r\n        {children}\r\n    </LocationsFilteredContext.Provider>\r\n}","import React, { createContext, FunctionComponent, useState } from \"react\";\r\n\r\ninterface ActiveLocationContextType {\r\n    activeLocation: string | undefined;\r\n    setActiveLocation: React.Dispatch<React.SetStateAction<string | undefined>>;\r\n}\r\n\r\nexport const ActiveLocationContext = createContext<ActiveLocationContextType | undefined>(undefined);\r\n\r\nexport const ActiveLocationProvider: FunctionComponent<{}> = ({ children }) => {\r\n    const [activeLocation, setActiveLocation] = useState<string | undefined>(undefined);\r\n    return <ActiveLocationContext.Provider value={{ activeLocation, setActiveLocation }}>{children}</ActiveLocationContext.Provider>\r\n}\r\n","import { FunctionComponent } from 'react';\r\n\r\nimport { GoogleMapsProvider } from './google-maps.context';\r\nimport { APIProvider } from './api.context';\r\nimport { LocationsFilteredProvider } from './api-locations-filter.context';\r\nimport { ActiveLocationProvider } from './active-location.context';\r\n\r\nexport const CombinedProviders: FunctionComponent<{}> = ({ children }) => {\r\n    return <GoogleMapsProvider>\r\n        <APIProvider>\r\n            <ActiveLocationProvider>\r\n                <LocationsFilteredProvider>\r\n                    {children}\r\n                </LocationsFilteredProvider>\r\n            </ActiveLocationProvider>\r\n        </APIProvider>\r\n    </GoogleMapsProvider>;\r\n}\r\n\r\nexport * from './google-maps.context';\r\nexport * from './active-location.context';\r\nexport * from './api.context';\r\nexport * from './api-locations-filter.context';","import styled from 'styled-components';\r\n\r\nexport const FormEle = styled.form`\r\n    display: block;\r\n    width: 80%;\r\n    margin: auto;\r\n`;\r\n\r\nexport const BtnEle = styled.button`\r\n    flex: 0 1 auto;\r\n    background: none;\r\n    color: #d59563;\r\n    font-size: 75%;\r\n    border: 2px solid #d59563;\r\n    border-radius: 6px;\r\n    padding: 0.25em .5em;\r\n    cursor: pointer;\r\n    &:hover, &:focus {\r\n        border-color: #d59563;\r\n        background-color: #d59563;\r\n        color: #333;\r\n    }\r\n    & + & {\r\n        margin-left: .5em;\r\n    }\r\n`;\r\n\r\nexport const LabelEle = styled.label`\r\n    display: flex;\r\n    align-items: baseline;\r\n    flex: 1 1 auto;\r\n    gap: .5em;\r\n    margin: .5em 0;\r\n    input, select {\r\n        flex: 1 1 auto;\r\n    }\r\n`;\r\n\r\nexport const LabelTextEle = styled.span`\r\n    display: block;\r\n    font-size: 75%;\r\n    flex: 0 0 80px;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst inputSharedStyles = `\r\n    line-height: inherit;\r\n    color: #fff;\r\n    background: transparent;\r\n    display: block;\r\n    border: none;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const InputTextEle = styled.input`\r\n    ${inputSharedStyles}\r\n    border-bottom: 1px solid #d59563;\r\n`;\r\n\r\n\r\nexport const SelectEle = styled.select`\r\n    ${inputSharedStyles}\r\n    border-bottom: 1px solid #d59563;\r\n\r\n    option {\r\n        color: inherit;\r\n        background: #444;\r\n    }\r\n`;","import { useState, FunctionComponent, SyntheticEvent, ChangeEvent, useContext } from 'react';\r\nimport { ActiveLocationContext, APIContext, APILocation, LocationsFilteredContext } from '../../context';\r\n\r\nimport { FormEle, LabelEle, LabelTextEle, SelectEle, InputTextEle, BtnEle } from './SearchForm.styles';\r\n\r\nexport const SearchForm: FunctionComponent<{}> = () => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectedTag, setSelectedTag] = useState('');\r\n\r\n    const apiContext = useContext(APIContext);\r\n    const locationsFilteredContext = useContext(LocationsFilteredContext);\r\n    const activeLocationContext = useContext(ActiveLocationContext);\r\n\r\n    const { tags } = useContext(APIContext) || {};\r\n\r\n    const handleTermChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    const handleTagChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        setSelectedTag(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        if (!selectedTag && !inputValue) {\r\n            locationsFilteredContext?.setFilteredLocations(apiContext?.locations || []);\r\n        }\r\n\r\n        let filterFunction = (item: APILocation): boolean => {\r\n            if (selectedTag && !item.tags?.includes(selectedTag)) {\r\n                return false;\r\n            };\r\n            if (\r\n                inputValue &&\r\n                item.name.indexOf(inputValue) === -1 &&\r\n                item.address.indexOf(inputValue) === -1 &&\r\n                item.description.indexOf(inputValue) === -1\r\n            ) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        activeLocationContext?.setActiveLocation(undefined);\r\n        locationsFilteredContext?.setFilteredLocations(\r\n            apiContext?.locations?.filter(filterFunction) || []\r\n        );\r\n    };\r\n\r\n    const handleReset = (e: SyntheticEvent<HTMLButtonElement>) => {\r\n        setInputValue('');\r\n        setSelectedTag('');\r\n        locationsFilteredContext?.setFilteredLocations(apiContext?.locations || []);\r\n    }\r\n\r\n\r\n    return (\r\n        <FormEle onSubmit={handleSubmit}>\r\n            <LabelEle>\r\n                <LabelTextEle\r\n                    className=\"label-text\"\r\n                >\r\n                    Search:\r\n                </LabelTextEle>\r\n                <InputTextEle\r\n                    type=\"text\"\r\n                    name=\"search-term\"\r\n                    placeholder=\"Term to search\"\r\n                    value={inputValue}\r\n                    onChange={handleTermChange}\r\n                />\r\n            </LabelEle>\r\n\r\n            <LabelEle>\r\n                <LabelTextEle\r\n                    className=\"label-text\"\r\n                >\r\n                    Category:\r\n                </LabelTextEle>\r\n                <SelectEle\r\n                    name=\"tag\"\r\n                    onChange={handleTagChange}\r\n                    value={selectedTag}\r\n                    disabled={!tags || tags.length < 1}\r\n                >\r\n                    <option>Please select:</option>\r\n                    {tags?.map((tag, index) => <option key={index} value={tag.id}>{tag.name}</option>)}\r\n                </SelectEle>\r\n            </LabelEle>\r\n\r\n            <BtnEle type=\"submit\">Submit</BtnEle>\r\n            <BtnEle type=\"reset\" onClick={handleReset}>Reset</BtnEle>\r\n        </FormEle>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const LocationEle = styled.article`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const LocationBtnWrapEle = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LocationBtnEle = styled.button<{ active?: boolean }>`\r\n    display: block;\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    background: none;\r\n    border: none;\r\n    position: relative;\r\n    color: inherit;\r\n    cursor: pointer;\r\n    &:hover, &:focus{\r\n        color: #f2f2f2;\r\n    }\r\n    &::before{\r\n        content: '';\r\n        display: block;\r\n        width: 40%;\r\n        height: 40%;\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        border-right: 2px solid currentColor;\r\n        border-bottom: 2px solid currentColor;\r\n        transition: transform 0.2s;\r\n        transform:  ${props => props.active ?\r\n        'translate(-50%, -50%) rotate(45deg)' :\r\n        'translate(-50%, -50%) rotate(-45deg)'\r\n    };\r\n    }\r\n`;\r\n\r\nexport const LocationTitleEle = styled.h1`\r\n    display: block;\r\n    width: 100%;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    font-size: 100%;\r\n    margin: 0 ;\r\n`;\r\n\r\nexport const LocationDetailsEle = styled.div`\r\n    cursor: default;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    font-size: 75%;\r\n    gap: .5em;\r\n    margin-top: 1em;\r\n`;\r\n\r\nexport const LocationAddressEle = styled.address`\r\n    white-space: pre;\r\n`;\r\n\r\nexport const LocationDetailsPartEle = styled.div`\r\n    display: block;\r\n    flex: 1 1 50%;    \r\n    color: #fff;\r\n`;\r\n\r\nexport const LocationDetailsTitleEle = styled.h2`\r\n    font-size: calc(12 / 18 * 100%);\r\n    text-transform: uppercase;\r\n    font-weight: 400;\r\n    margin: 0 0 0.25em;\r\n    text-decoration: underline;\r\n`;\r\n\r\nexport const TagsEle = styled.div`\r\n    display: flex;\r\n    gap: 0.1em;\r\n`;\r\n\r\nexport const TagEle = styled.span`\r\n    font-size: 50%;\r\n    border-radius: 2px;\r\n    border: 1px solid currentColor;\r\n    padding: 0.2em 0.5em;\r\n    font-weight: 400;\r\n`;","import { FunctionComponent, useContext } from 'react';\r\nimport { APIContext, APILocation } from '../../context';\r\n\r\nimport { LocationBtnWrapEle, LocationBtnEle, LocationEle, LocationTitleEle, LocationDetailsEle, LocationAddressEle, LocationDetailsPartEle, LocationDetailsTitleEle, TagsEle, TagEle } from './LocationsListItem.styles';\r\n\r\ninterface LocationsListItemProps {\r\n    location: APILocation;\r\n    setActive: () => void;\r\n    isActive: boolean;\r\n}\r\nexport const LocationsListItem: FunctionComponent<LocationsListItemProps> = ({ location, setActive, isActive }) => {\r\n\r\n    const apiContext = useContext(APIContext);\r\n\r\n    const { name, description, address, tags } = location;\r\n\r\n    const mappedTags = tags && apiContext?.tags && tags?.map((tag) => apiContext.tags.find(item => item.id === tag)?.name);\r\n\r\n    return (\r\n        <LocationEle onClick={setActive}>\r\n            <LocationBtnWrapEle>\r\n                <LocationTitleEle>{name}</LocationTitleEle>\r\n                <LocationBtnEle active={isActive}></LocationBtnEle>\r\n            </LocationBtnWrapEle>\r\n            { mappedTags && mappedTags.length > 0 &&\r\n                <TagsEle>\r\n                    {mappedTags.map((tag, index) => <TagEle key={index}>{tag}</TagEle>)}\r\n                </TagsEle>\r\n            }\r\n            {isActive &&\r\n                <LocationDetailsEle onClick={event => event.stopPropagation()}>\r\n                    <LocationDetailsPartEle>\r\n                        <LocationDetailsTitleEle>Description</LocationDetailsTitleEle>\r\n                        {description}\r\n                    </LocationDetailsPartEle>\r\n                    <LocationDetailsPartEle>\r\n                        <LocationDetailsTitleEle>Address</LocationDetailsTitleEle>\r\n                        <LocationAddressEle>{address}</LocationAddressEle>\r\n                    </LocationDetailsPartEle>\r\n                </LocationDetailsEle>}\r\n        </LocationEle>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const LocationsListWrapEle = styled.ul`\r\n    overflow-y: auto;\r\n    padding: 0;\r\n    margin: 0;\r\n    border-top: .2em solid #38414e;\r\n`;\r\n\r\nexport const LocationsListEle = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n`;\r\n\r\nexport const LocationsListItemEle = styled.li`\r\n    display: block;\r\n    margin: 1em 0;\r\n    border-left: .2em solid currentColor;\r\n    padding: 0 .5em 0 .3em;\r\n`;\r\n","import { FunctionComponent, useContext } from 'react';\r\nimport { ActiveLocationContext, APILocation, LocationsFilteredContext } from '../../context';\r\nimport { LocationsListItem } from '../LocationsListItem';\r\n\r\nimport { LocationsListWrapEle, LocationsListItemEle, LocationsListEle } from './LocationsList.styles';\r\n\r\nexport const LocationsList: FunctionComponent<{}> = () => {\r\n    const { filteredLocations } = useContext(LocationsFilteredContext) || {};\r\n    const { activeLocation, setActiveLocation } = useContext(ActiveLocationContext) || {};\r\n\r\n    const setActive = (active: string) => {\r\n        if (!active || !setActiveLocation) {\r\n            return;\r\n        }\r\n        setActiveLocation(active === activeLocation ? undefined : active);\r\n    }\r\n\r\n    return (\r\n        <LocationsListWrapEle>\r\n            <LocationsListEle>\r\n                {filteredLocations?.map((location: APILocation) => (\r\n                    <LocationsListItemEle key={location.id}>\r\n                        <LocationsListItem isActive={location.id === activeLocation} setActive={() => setActive(location.id)} location={location} />\r\n                    </LocationsListItemEle>\r\n                ))}\r\n            </LocationsListEle>\r\n        </LocationsListWrapEle>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const MapContainer = styled.div`\r\n    display: block;\r\n    height 45vw;\r\n    @media screen and (min-width: 900px) {\r\n        height: 100%;\r\n        grid-row: 1 / 3;\r\n        grid-column: 2;\r\n    }\r\n`;","import { FunctionComponent, useState, useRef, useEffect, useContext } from \"react\";\r\nimport { GoogleMapsContext, LocationsFilteredContext } from \"../../context\";\r\nimport { ActiveLocationContext } from \"../../context\";\r\n\r\nimport { MapContainer } from './Map.styles';\r\n\r\nexport const Map: FunctionComponent<{}> = () => {\r\n\r\n    const googleMapsContext = useContext(GoogleMapsContext);\r\n    const { filteredLocations } = useContext(LocationsFilteredContext) || {};\r\n    const { activeLocation, setActiveLocation } = useContext(ActiveLocationContext) || {};\r\n\r\n    const [map, setMap] = useState<google.maps.Map | undefined>(undefined);\r\n    const [markers, setMarkers] = useState<google.maps.Marker[] | undefined>(undefined);\r\n\r\n    const mapRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (!mapRef.current || !googleMapsContext?.loaded) {\r\n            return;\r\n        }\r\n        setMap(new google.maps.Map(mapRef.current, {\r\n            mapId: process.env.REACT_APP_MAP_ID,\r\n            center: { lat: -33, lng: 151 },\r\n            zoom: 8,\r\n            zoomControl: false,\r\n        } as google.maps.MapOptions));\r\n    }, [googleMapsContext, mapRef, setMap])\r\n\r\n    useEffect(() => {\r\n        if (!map) {\r\n            return;\r\n        }\r\n\r\n        const newMarkers = filteredLocations?.map((location) => {\r\n            const { lat, lng } = location;\r\n            return new google.maps.Marker({\r\n                position: {\r\n                    lat, lng\r\n                },\r\n                map,\r\n            });\r\n        });\r\n\r\n        setMarkers(newMarkers);\r\n    }, [map, filteredLocations]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!markers || !map || !setActiveLocation || !filteredLocations) {\r\n            return\r\n        }\r\n\r\n        const bounds = new google.maps.LatLngBounds();\r\n        markers.forEach(marker => {\r\n            const position = marker.getPosition();\r\n            if (!position) {\r\n                return;\r\n            }\r\n            bounds.extend(position);\r\n        });\r\n\r\n        map.fitBounds(bounds);\r\n        map.setZoom(Math.min(map.getZoom() - 1, 15));\r\n\r\n        markers.forEach((marker, index) => {\r\n            marker.addListener('click', (e) => {\r\n                if (filteredLocations) {\r\n                    console.log(filteredLocations[index]);\r\n                };\r\n                setActiveLocation && setActiveLocation(filteredLocations[index].id);\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            markers.forEach((marker) => {\r\n                google.maps.event.clearInstanceListeners(marker);\r\n            });\r\n        };\r\n    }, [map, markers, filteredLocations, setActiveLocation]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!filteredLocations || !map || typeof activeLocation === 'undefined' || !markers) {\r\n            return;\r\n        }\r\n\r\n        const index = filteredLocations.findIndex(location => location.id === activeLocation);\r\n\r\n        if (typeof index === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        const marker = markers[index];\r\n        const position = marker.getPosition() as google.maps.LatLng;\r\n\r\n        if (position) {\r\n            map.panTo(position);\r\n            if(map.getZoom() < 12) {\r\n                map.setZoom(12)\r\n            }\r\n        }\r\n\r\n    }, [map, activeLocation, markers, filteredLocations]);\r\n\r\n    return <MapContainer ref={mapRef} />;\r\n}\r\n\r\n","import { FunctionComponent } from 'react';\nimport { StoreFinderContainer } from './App.styles';\n\nimport { SearchForm } from '../SearchForm';\nimport { LocationsList } from '../LocationsList';\nimport { Map } from '../Map';\n\nimport { CombinedProviders } from '../../context';\n\nexport const App: FunctionComponent<unknown> = () => {\n  return (\n    <div id=\"store-finder-app\">\n      <CombinedProviders>\n        <StoreFinderContainer>\n          <SearchForm />\n          <Map />\n          <LocationsList />\n        </StoreFinderContainer>\n      </CombinedProviders>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}